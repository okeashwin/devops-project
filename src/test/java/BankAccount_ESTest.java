/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 21 02:24:56 GMT 2015
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class BankAccount_ESTest extends BankAccount_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 25 covered goals:
   * Goal 1. BankAccount.debit(D)D: Line 12
   * Goal 2. BankAccount.debit(D)D: I6 Branch 1 IFGE L11 - false
   * Goal 3. Weak Mutation 3: BankAccount.debit(D)D:11 - ReplaceComparisonOperator >= -> -1
   * Goal 4. Weak Mutation 6: BankAccount.debit(D)D:12 - InsertUnaryOp Negation
   * Goal 5. BankAccount.debit(D)D:zero
   * Goal 6. Branch BankAccount.debit(D)D: I6 Branch 1 IFGE L11 - false in context: BankAccount:debit(D)D
   * Goal 7. BankAccount.<init>(D)V: Line 7
   * Goal 8. BankAccount.<init>(D)V: Line 8
   * Goal 9. BankAccount.debit(D)D: Line 11
   * Goal 10. BankAccount.debit(D)D: Line 15
   * Goal 11. BankAccount.debit(D)D: Line 16
   * Goal 12. BankAccount.<init>(D)V: root-Branch
   * Goal 13. Weak Mutation 0: BankAccount.<init>(D)V:7 - InsertUnaryOp Negation
   * Goal 14. Weak Mutation 1: BankAccount.debit(D)D:11 - InsertUnaryOp Negation
   * Goal 15. Weak Mutation 2: BankAccount.debit(D)D:11 - InsertUnaryOp Negation
   * Goal 16. Weak Mutation 7: BankAccount.debit(D)D:15 - InsertUnaryOp Negation
   * Goal 17. Weak Mutation 8: BankAccount.debit(D)D:15 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 10: BankAccount.debit(D)D:15 - ReplaceArithmeticOperator - -> %
   * Goal 19. Weak Mutation 12: BankAccount.debit(D)D:15 - ReplaceArithmeticOperator - -> /
   * Goal 20. Weak Mutation 13: BankAccount.debit(D)D:16 - InsertUnaryOp Negation
   * Goal 21. BankAccount.<init>(D)V
   * Goal 22. BankAccount.debit(D)D
   * Goal 23. BankAccount.<init>(D)V
   * Goal 24. BankAccount.debit(D)D
   * Goal 25. Branch BankAccount.<init>(D)V: root-Branch in context: BankAccount:<init>(D)V
   */

  @Test
  public void test0()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount(0.0);
      double double0 = bankAccount0.debit(1.0);
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 1
  /*
   * 8 covered goals:
   * Goal 1. Weak Mutation 5: BankAccount.debit(D)D:11 - ReplaceComparisonOperator >= -> >
   * Goal 2. BankAccount.debit(D)D:positive
   * Goal 3. BankAccount.debit(D)D: I6 Branch 1 IFGE L11 - true
   * Goal 4. Weak Mutation 4: BankAccount.debit(D)D:11 - ReplaceComparisonOperator >= -> ==
   * Goal 5. Weak Mutation 9: BankAccount.debit(D)D:15 - ReplaceArithmeticOperator - -> +
   * Goal 6. Weak Mutation 11: BankAccount.debit(D)D:15 - ReplaceArithmeticOperator - -> *
   * Goal 7. BankAccount.debit(D)D:negative
   * Goal 8. Branch BankAccount.debit(D)D: I6 Branch 1 IFGE L11 - true in context: BankAccount:debit(D)D
   */

  @Test
  public void test1()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount(0.0);
      double double0 = bankAccount0.debit((-1.0));
      assertEquals((-1.0), double0, 0.01D);
      
      double double1 = bankAccount0.debit(1.0);
      assertEquals(1.0, double1, 0.01D);
  }
}
